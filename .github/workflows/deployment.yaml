name: Deploy Terragrunt infrastructure
on:
  workflow_dispatch:
    inputs:
      environment:
        description: The environment (stage or prod).
        required: true
        default: "stage"
        type: choice
        options:
          - STAGE
          - PROD
      layer:
        description: The layer of the stack (backend or frontend).
        required: true
        default: "frontend"
        type: choice
        options:
          - FRONTEND
          - BACKEND

permissions:
  id-token: write
  contents: read

env:
  TG_VERSION: '0.72.5'
  TF_VERSION: '1.10.5'
  TG_DIR: 'infra'
  ENVIRONMENT: ${{ inputs.environment }}
  LAYER: ${{ inputs.layer }}
  TERRAGRUNT_EXCLUDE_DIR: "infra/frontend/modules/oidc"
  TERRAGRUNT_NON_INTERACTIVE: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  determine_config:
    runs-on: ubuntu-latest
    outputs:
      bucket: ${{ steps.echo_bucket.outputs.bucket }}
    steps:
      - id: echo_bucket
        name: Provide the name of the Actions secret that stores the appropriate S3 bucket
        run: echo "bucket=${{ secrets[format('TG_S3_{0}_{1}', env.LAYER, env.ENVIRONMENT)] }}" >> "$GITHUB_OUTPUT"
  plan:
    runs-on: ubuntu-latest
    needs: [ determine_config ]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Authenticate to AWS
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.GH_IAM_ROLE_ARN }}
          output-credentials: true
      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_version: ${{ env.TG_VERSION }}
          tf_version: ${{ env.TF_VERSION }}
          tg_comment: true
          tg_dir: ${{ env.TG_DIR }}
          tg_command: 'run-all plan'
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ plan ]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Authenticate to AWS
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume:  ${{ secrets.GH_IAM_ROLE_ARN }}
          output-credentials: true
      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_version: ${{ env.TG_VERSION }}
          tf_version: ${{ env.TF_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_comment: true
          tg_command: 'run-all apply'
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}